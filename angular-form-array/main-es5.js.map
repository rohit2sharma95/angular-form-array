{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.html","webpack:///src/app/app.component.scss","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/services/main.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","_FormBuilder","_MainService","mainForm","group","modules","array","alive","getData","pipe","subscribe","next","data","forEach","push","generateModule","generateSubModules","subModules","formArray","val","required","name","read","write","create","disable","control","isChecked","toggleInnerStatus","get","valueChanges","value","enable","selector","template","AppModule","declarations","imports","providers","bootstrap","MainService","_HttpClient","providedIn","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<div class=\\\"container\\\">\\n  <div class=\\\"bg-light border p-3 rounded\\\">\\n    <h5 class=\\\"font-weight-bold text-center\\\">Main Form</h5>\\n    <hr />\\n    <form [formGroup]=\\\"mainForm\\\">\\n      <div class=\\\"card-columns\\\">\\n        <ng-container formArrayName=\\\"modules\\\">\\n          <ng-template ngFor let-module [ngForOf]=\\\"modules.controls\\\">\\n            <ng-container [formGroup]=\\\"module\\\">\\n              <div class=\\\"card\\\">\\n                <div class=\\\"card-header font-weight-bold text-capitalize\\\">\\n                  <div class=\\\"custom-control custom-checkbox\\\">\\n                    <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" formControlName=\\\"isChecked\\\" [id]=\\\"module.get('name').value\\\">\\n                    <label class=\\\"custom-control-label\\\" [for]=\\\"module.get('name').value\\\">{{module.get('name').value}}</label>\\n                  </div>\\n                </div>\\n                <ng-container formArrayName=\\\"subModules\\\">\\n                  <ul class=\\\"list-group list-group-flush\\\">\\n                    <ng-template ngFor let-subModule [ngForOf]=\\\"module.controls.subModules.controls\\\">\\n                      <ng-container [formGroup]=\\\"subModule\\\">\\n                        <li class=\\\"list-group-item\\\">\\n                          <span>{{subModule.get('name').value}}</span>\\n                          <hr class=\\\"my-2\\\" />\\n                          <div class=\\\"custom-control custom-checkbox\\\">\\n                            <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" formControlName=\\\"read\\\" [id]=\\\"'customCheckRead' + module.get('name').value\\\">\\n                            <label class=\\\"custom-control-label\\\" [for]=\\\"'customCheckRead' + module.get('name').value\\\">Read</label>\\n                          </div>\\n                          <div class=\\\"custom-control custom-checkbox\\\">\\n                            <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" formControlName=\\\"write\\\" [id]=\\\"'customCheckWrite' + module.get('name').value\\\">\\n                            <label class=\\\"custom-control-label\\\" [for]=\\\"'customCheckWrite' + module.get('name').value\\\">Write</label>\\n                          </div>\\n                          <div class=\\\"custom-control custom-checkbox\\\">\\n                            <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" formControlName=\\\"delete\\\" [id]=\\\"'customCheckDelete' + module.get('name').value\\\">\\n                            <label class=\\\"custom-control-label\\\" [for]=\\\"'customCheckDelete' + module.get('name').value\\\">Delete</label>\\n                          </div>\\n                          <div class=\\\"custom-control custom-checkbox\\\">\\n                            <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" formControlName=\\\"create\\\" [id]=\\\"'customCheckCreate' + module.get('name').value\\\">\\n                            <label class=\\\"custom-control-label\\\" [for]=\\\"'customCheckCreate' + module.get('name').value\\\">Create</label>\\n                          </div>\\n                          <div class=\\\"custom-control custom-checkbox\\\">\\n                            <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" formControlName=\\\"import\\\" [id]=\\\"'customCheckImport' + module.get('name').value\\\">\\n                            <label class=\\\"custom-control-label\\\" [for]=\\\"'customCheckImport' + module.get('name').value\\\">Import</label>\\n                          </div>\\n                          <div class=\\\"custom-control custom-checkbox\\\">\\n                            <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" formControlName=\\\"export\\\" [id]=\\\"'customCheckExport' + module.get('name').value\\\">\\n                            <label class=\\\"custom-control-label\\\" [for]=\\\"'customCheckExport' + module.get('name').value\\\">Export</label>\\n                          </div>\\n                        </li>\\n                      </ng-container>\\n                    </ng-template>\\n                  </ul>\\n                </ng-container>\\n              </div>\\n            </ng-container>\\n          </ng-template>\\n        </ng-container>\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup, FormBuilder, FormArray, Validators } from '@angular/forms';\nimport { MainService } from './services/main.service';\nimport { takeWhile } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit, OnDestroy {\n\n  mainForm: FormGroup;\n  alive: boolean;\n\n  constructor(\n    private _FormBuilder: FormBuilder,\n    private _MainService: MainService\n  ) {\n    this.mainForm = this._FormBuilder.group({\n      modules: this._FormBuilder.array([])\n    });\n    this.alive = true;\n  }\n\n  ngOnInit() {\n    this._MainService.getData().pipe(takeWhile(() => this.alive)).subscribe({\n      next: data => {\n        if (data && data.modules) {\n          data.modules.forEach(module => {\n            this.modules.push(this.generateModule(module));\n          });\n        }\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.alive = false;\n  }\n\n  get modules(): FormArray {\n    return this.mainForm.get('modules') as FormArray;\n  }\n\n  generateModule(module: any) {\n    const generateSubModules = (subModules) => {\n      const formArray = this._FormBuilder.array([]);\n      subModules.forEach(val => {\n        formArray.push(this._FormBuilder.group({\n          id: [val.id, [Validators.required]],\n          name: [val.name, Validators.required],\n          read: [val.read || false],\n          write: [val.write || false],\n          delete: [val.delete || false],\n          create: [val.create || false],\n          export: [val.export || false],\n          import: [val.import || false]\n        }));\n      });\n      formArray.disable();\n      return formArray;\n    };\n\n    const control = this._FormBuilder.group({\n      id: [module.id, [Validators.required]],\n      name: [module.name, [Validators.required]],\n      isChecked: [false],\n      subModules: generateSubModules(module.subModules)\n    });\n    this.toggleInnerStatus(control);\n    return control;\n  }\n\n  toggleInnerStatus(control: FormGroup) {\n    control.get('isChecked').valueChanges.subscribe({\n      next: value => {\n        value === true ? control.get('subModules').enable() : control.get('subModules').disable();\n      }\n    });\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class MainService {\n\n  constructor(\n    private _HttpClient: HttpClient\n  ) { }\n\n  getData(): Observable<any> {\n    return this._HttpClient.get('assets/data/data.json');\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}