{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/app.component.scss","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/services/main.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<div class=\\\"container\\\">\\n  <div class=\\\"bg-light border p-3 rounded\\\">\\n    <h5 class=\\\"font-weight-bold text-center\\\">Main Form</h5>\\n    <hr />\\n    <form [formGroup]=\\\"mainForm\\\">\\n      <div class=\\\"card-columns\\\">\\n        <ng-container formArrayName=\\\"modules\\\">\\n          <ng-template ngFor let-module [ngForOf]=\\\"modules.controls\\\">\\n            <ng-container [formGroup]=\\\"module\\\">\\n              <div class=\\\"card\\\">\\n                <div class=\\\"card-header font-weight-bold text-capitalize\\\">\\n                  <div class=\\\"custom-control custom-checkbox\\\">\\n                    <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" formControlName=\\\"isChecked\\\" [id]=\\\"module.get('name').value\\\">\\n                    <label class=\\\"custom-control-label\\\" [for]=\\\"module.get('name').value\\\">{{module.get('name').value}}</label>\\n                  </div>\\n                </div>\\n                <ng-container formArrayName=\\\"subModules\\\">\\n                  <ul class=\\\"list-group list-group-flush\\\">\\n                    <ng-template ngFor let-subModule [ngForOf]=\\\"module.controls.subModules.controls\\\">\\n                      <ng-container [formGroup]=\\\"subModule\\\">\\n                        <li class=\\\"list-group-item\\\">\\n                          <span>{{subModule.get('name').value}}</span>\\n                          <hr class=\\\"my-2\\\" />\\n                          <div class=\\\"custom-control custom-checkbox\\\">\\n                            <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" formControlName=\\\"read\\\" [id]=\\\"'customCheckRead' + module.get('name').value\\\">\\n                            <label class=\\\"custom-control-label\\\" [for]=\\\"'customCheckRead' + module.get('name').value\\\">Read</label>\\n                          </div>\\n                          <div class=\\\"custom-control custom-checkbox\\\">\\n                            <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" formControlName=\\\"write\\\" [id]=\\\"'customCheckWrite' + module.get('name').value\\\">\\n                            <label class=\\\"custom-control-label\\\" [for]=\\\"'customCheckWrite' + module.get('name').value\\\">Write</label>\\n                          </div>\\n                          <div class=\\\"custom-control custom-checkbox\\\">\\n                            <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" formControlName=\\\"delete\\\" [id]=\\\"'customCheckDelete' + module.get('name').value\\\">\\n                            <label class=\\\"custom-control-label\\\" [for]=\\\"'customCheckDelete' + module.get('name').value\\\">Delete</label>\\n                          </div>\\n                          <div class=\\\"custom-control custom-checkbox\\\">\\n                            <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" formControlName=\\\"create\\\" [id]=\\\"'customCheckCreate' + module.get('name').value\\\">\\n                            <label class=\\\"custom-control-label\\\" [for]=\\\"'customCheckCreate' + module.get('name').value\\\">Create</label>\\n                          </div>\\n                          <div class=\\\"custom-control custom-checkbox\\\">\\n                            <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" formControlName=\\\"import\\\" [id]=\\\"'customCheckImport' + module.get('name').value\\\">\\n                            <label class=\\\"custom-control-label\\\" [for]=\\\"'customCheckImport' + module.get('name').value\\\">Import</label>\\n                          </div>\\n                          <div class=\\\"custom-control custom-checkbox\\\">\\n                            <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" formControlName=\\\"export\\\" [id]=\\\"'customCheckExport' + module.get('name').value\\\">\\n                            <label class=\\\"custom-control-label\\\" [for]=\\\"'customCheckExport' + module.get('name').value\\\">Export</label>\\n                          </div>\\n                        </li>\\n                      </ng-container>\\n                    </ng-template>\\n                  </ul>\\n                </ng-container>\\n              </div>\\n            </ng-container>\\n          </ng-template>\\n        </ng-container>\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup, FormBuilder, FormArray, Validators } from '@angular/forms';\nimport { MainService } from './services/main.service';\nimport { takeWhile } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit, OnDestroy {\n\n  mainForm: FormGroup;\n  alive: boolean;\n\n  constructor(\n    private _FormBuilder: FormBuilder,\n    private _MainService: MainService\n  ) {\n    this.mainForm = this._FormBuilder.group({\n      modules: this._FormBuilder.array([])\n    });\n    this.alive = true;\n  }\n\n  ngOnInit() {\n    this._MainService.getData().pipe(takeWhile(() => this.alive)).subscribe({\n      next: data => {\n        if (data && data.modules) {\n          data.modules.forEach(module => {\n            this.modules.push(this.generateModule(module));\n          });\n        }\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.alive = false;\n  }\n\n  get modules(): FormArray {\n    return this.mainForm.get('modules') as FormArray;\n  }\n\n  generateModule(module: any) {\n    const generateSubModules = (subModules) => {\n      const formArray = this._FormBuilder.array([]);\n      subModules.forEach(val => {\n        formArray.push(this._FormBuilder.group({\n          id: [val.id, [Validators.required]],\n          name: [val.name, Validators.required],\n          read: [val.read || false],\n          write: [val.write || false],\n          delete: [val.delete || false],\n          create: [val.create || false],\n          export: [val.export || false],\n          import: [val.import || false]\n        }));\n      });\n      formArray.disable();\n      return formArray;\n    };\n\n    const control = this._FormBuilder.group({\n      id: [module.id, [Validators.required]],\n      name: [module.name, [Validators.required]],\n      isChecked: [false],\n      subModules: generateSubModules(module.subModules)\n    });\n    this.toggleInnerStatus(control);\n    return control;\n  }\n\n  toggleInnerStatus(control: FormGroup) {\n    control.get('isChecked').valueChanges.subscribe({\n      next: value => {\n        value === true ? control.get('subModules').enable() : control.get('subModules').disable();\n      }\n    });\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class MainService {\n\n  constructor(\n    private _HttpClient: HttpClient\n  ) { }\n\n  getData(): Observable<any> {\n    return this._HttpClient.get('assets/data/data.json');\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}